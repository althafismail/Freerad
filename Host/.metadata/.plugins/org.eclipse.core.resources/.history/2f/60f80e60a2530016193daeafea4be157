/*
 * App_CallbackFunctions.c
 *
 *  Created on: Jul 18, 2016
 *      Author: Althaf.Ismail
 */

// C/C++ Includes
#include <stdio.h>

// Freerad includes
#include "App_CallbackFunctions.h"

/*!
 * @brief Timer callback.
 */
void vExampleTimerCallback(TimerHandle_t xTimer)
{
	GPIO_TogglePinsOutput(BIT_LED_A);
//	printf("Status: %04x\r\n", (unsigned short)FTM_GetStatusFlags(FTM2));
	if(FTM2->CNT)	{
		printf("Enc: %04x\r\n", (unsigned short)FTM2->CNT);
		FTM2->CNT = 1;
//		FTM_ClearStatusFlags(FTM2, 0xFFFF);
	}
}

void PORTA_IRQHandler(void)
{
	uint32_t temp = GPIO_GetPinsInterruptFlags(GPIOA);
	BaseType_t wakeUp;
	GPIO_ClearPinsInterruptFlags(GPIOA, 0xFFFFFFFF);
	xTaskNotifyFromISR(GPIOA_IRQ_TaskHandle, temp, eSetBits, &wakeUp);
	if(wakeUp == pdTRUE)
		taskYIELD();
}

void PORTC_IRQHandler(void)
{
	uint32_t temp = GPIO_GetPinsInterruptFlags(GPIOC);
	BaseType_t wakeUp;
	GPIO_ClearPinsInterruptFlags(GPIOC, 0xFFFFFFFF);
	xTaskNotifyFromISR(GPIOC_IRQ_TaskHandle, temp, eSetBits, &wakeUp);
	if(wakeUp == pdTRUE)
		taskYIELD();
}

void FTM2_IRQHandler(void)
{
	uint32_t temp = FTM2->SC;
	FTM2->SC &= 0xFFFFFFBF;
	FTM_ClearStatusFlags(FTM2, FTM_GetStatusFlags(FTM2));
}
